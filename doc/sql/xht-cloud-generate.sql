DROP
    DATABASE IF EXISTS `xht-cloud-generate`;

CREATE
    DATABASE  `xht-cloud-generate` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;

SET NAMES utf8mb4;
SET
    FOREIGN_KEY_CHECKS = 0;

USE
    `xht-cloud-generate`;

DROP TABLE IF EXISTS `gen_code_config`;
CREATE TABLE `gen_code_config`
(
    `id`             bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
    `config_name`    varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '配置名称',
    `config_desc`    varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '配置描述',
    `config_sort`    int                                                           DEFAULT NULL COMMENT '排序',
    `config_default` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci      DEFAULT NULL COMMENT '是否默认 1是',
    `create_by`      varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci  DEFAULT NULL COMMENT '创建者',
    `create_time`    datetime                                                      DEFAULT NULL COMMENT '创建时间',
    `update_by`      varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci  DEFAULT NULL COMMENT '更新者',
    `update_time`    datetime                                                      DEFAULT NULL COMMENT '更新时间',
    `del_flag`       char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci      DEFAULT NULL,
    PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='代码生成器-配置中心';
INSERT INTO `gen_code_config` (`id`, `config_name`, `config_desc`, `config_sort`, `config_default`, `create_by`,
                               `create_time`, `update_by`, `update_time`, `del_flag`)
VALUES (1, 'xht-cloud-platform', 'springboot3+vue3+ts（单表）', 1, '1', NULL, NULL, NULL, NULL, '0');

DROP TABLE IF EXISTS `gen_column_type`;
CREATE TABLE `gen_column_type`
(
    `id`       bigint                                                        NOT NULL AUTO_INCREMENT,
    `db_label` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '数据库类型',
    `db_value` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '数据库字段类型',
    `label`    varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '语言类型',
    `value`    varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '代码类型',
    PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=39 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='代码生成器-字段类型对应表';
INSERT INTO `gen_column_type` (`id`, `db_label`, `db_value`, `label`, `value`)
VALUES (1, 'MySql', 'timestamp', 'Java', 'LocalDateTime'),
       (2, 'MySql', 'longtext', 'Java', 'String'),
       (3, 'MySql', 'mediumtext', 'Java', 'String'),
       (4, 'MySql', 'text', 'Java', 'String'),
       (5, 'MySql', 'tinytext', 'Java', 'String'),
       (6, 'MySql', 'varchar', 'Java', 'String'),
       (7, 'MySql', 'char', 'Java', 'String'),
       (8, 'MySql', 'bit', 'Java', 'Boolean'),
       (9, 'MySql', 'decimal', 'Java', 'BigDecimal'),
       (10, 'MySql', 'double', 'Java', 'Double'),
       (11, 'MySql', 'float', 'Java', 'Float'),
       (12, 'MySql', 'bigint', 'Java', 'Long'),
       (13, 'MySql', 'integer', 'Java', 'Integer'),
       (14, 'MySql', 'int', 'Java', 'Integer'),
       (15, 'MySql', 'mediumint', 'Java', 'Integer'),
       (16, 'MySql', 'smallint', 'Java', 'Integer'),
       (17, 'MySql', 'tinyint', 'Java', 'Integer'),
       (18, 'MySql', 'date', 'Java', 'LocalDateTime'),
       (19, 'MySql', 'datetime', 'Java', 'LocalDateTime'),
       (20, 'MySql', 'timestamp', 'TS', 'Date'),
       (21, 'MySql', 'longtext', 'TS', 'string'),
       (22, 'MySql', 'mediumtext', 'TS', 'string'),
       (23, 'MySql', 'text', 'TS', 'string'),
       (24, 'MySql', 'tinytext', 'TS', 'string'),
       (25, 'MySql', 'varchar', 'TS', 'string'),
       (26, 'MySql', 'char', 'TS', 'string'),
       (27, 'MySql', 'bit', 'TS', 'boolean'),
       (28, 'MySql', 'decimal', 'TS', 'number'),
       (29, 'MySql', 'double', 'TS', 'number'),
       (30, 'MySql', 'float', 'TS', 'number'),
       (31, 'MySql', 'bigint', 'TS', 'number'),
       (32, 'MySql', 'integer', 'TS', 'number'),
       (33, 'MySql', 'int', 'TS', 'number'),
       (34, 'MySql', 'mediumint', 'TS', 'number'),
       (35, 'MySql', 'smallint', 'TS', 'number'),
       (36, 'MySql', 'tinyint', 'TS', 'number'),
       (37, 'MySql', 'date', 'TS', 'Date'),
       (38, 'MySql', 'datetime', 'TS', 'Date');

DROP TABLE IF EXISTS `gen_database`;
CREATE TABLE `gen_database`
(
    `id`          bigint NOT NULL AUTO_INCREMENT,
    `conn_name`   varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '连接名称',
    `db_url`      varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '数据库连接',
    `db_type`     varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '数据库类型',
    `db_name`     varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '数据库名称',
    `db_describe` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '数据库描述',
    `host`        varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT 'host',
    `port`        varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '端口',
    `user_name`   varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '用户名',
    `pass_word`   varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '密码',
    `sort`        int                                                           DEFAULT NULL COMMENT '排序',
    `del_flag`    char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci      DEFAULT NULL COMMENT '是否删除(0未删除1已经删除)',
    `create_by`   varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci  DEFAULT NULL COMMENT '创建者',
    `update_by`   varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci  DEFAULT NULL COMMENT '更新者',
    `create_time` datetime                                                      DEFAULT NULL COMMENT '创建时间',
    `update_time` datetime                                                      DEFAULT NULL COMMENT '更新时间',
    PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='代码生成器-数据源管理';
INSERT INTO `gen_database` (`id`, `conn_name`, `db_url`, `db_type`, `db_name`, `db_describe`, `host`, `port`,
                            `user_name`, `pass_word`, `sort`, `del_flag`, `create_by`, `update_by`, `create_time`,
                            `update_time`)
VALUES (1, 'xht-cloud',
        'jdbc:mysql://192.168.100.1:3306/xht-cloud?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8',
        'MySql', 'xht-cloud',
        'jdbc:mysql://192.168.100.1:3306/xht-cloud?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8 ',
        '127.0.0.1', '3306', 'root', '123456', 1, '0', 'admin', 'admin', '2023-05-17 11:35:42', '2023-05-17 11:36:03'),
       (2, 'xht-cloud-mall',
        'jdbc:mysql://127.0.0.1:3306/xht-cloud-mall?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8',
        'MySql', 'xht-cloud-mall', 'xht-cloud-mall', '127.0.0.1', '3306', 'root', '123456', 1, '1', NULL, NULL, NULL,
        NULL),
       (3, 'xht-cloud-flowable',
        'jdbc:mysql://127.0.0.1:3306/xht-cloud-flowable?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8',
        'MySql', 'xht-cloud-flowable', 'xht-cloud-flowable', '127.0.0.1', '3306', 'root', '123456', 1, '1', NULL, NULL,
        NULL, NULL);
DROP TABLE IF EXISTS `gen_file_disk`;
CREATE TABLE `gen_file_disk`
(
    `id`             bigint                                                       NOT NULL AUTO_INCREMENT,
    `parent_id`      bigint                                                         DEFAULT NULL COMMENT '上级目录',
    `config_id`      varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '配置id',
    `file_name`      varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci  DEFAULT NULL COMMENT '文件名称',
    `file_desc`      varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci  DEFAULT NULL COMMENT '文件描述',
    `file_type`      varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci   DEFAULT NULL COMMENT '文件类型',
    `file_path`      text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci COMMENT '文件路径',
    `file_code_path` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci,
    `file_content`   longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci COMMENT '模板内容',
    `file_sort`      int                                                            DEFAULT NULL COMMENT '文件排序',
    `ignore_field`   varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '忽略字段',
    `del_flag`       char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci       DEFAULT NULL COMMENT '是否删除(0未删除1已经删除)',
    `create_by`      varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci  DEFAULT NULL COMMENT '创建人',
    `create_time`    datetime                                                       DEFAULT NULL COMMENT '创建时间',
    `update_by`      varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci  DEFAULT NULL COMMENT '更新人',
    `update_time`    datetime                                                       DEFAULT NULL COMMENT '更新时间',
    PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=56 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='代码生成器-代码模板';
INSERT INTO `gen_file_disk` (`id`, `parent_id`, `config_id`, `file_name`, `file_desc`, `file_type`, `file_path`, `file_code_path`, `file_content`, `file_sort`, `ignore_field`, `del_flag`, `create_by`, `create_time`, `update_by`, `update_time`) VALUES (1,-1,'1','{projectName}','暂无','1','/{projectName}',NULL,NULL,1,NULL,NULL,'anonymity','2024-08-20 13:23:37','anonymity','2024-08-20 13:23:37'),(2,-1,'1','web','暂无','1','/web',NULL,NULL,1,NULL,NULL,'anonymity','2024-08-20 13:23:57','anonymity','2024-08-20 13:23:57'),(3,-1,'1','sql','暂无','2','/sql','/sql',NULL,1,NULL,NULL,'anonymity','2024-08-20 13:24:02','anonymity','2024-08-20 13:24:02'),(4,1,'1','src','暂无','1','/{projectName}/src',NULL,NULL,1,NULL,NULL,'anonymity','2024-08-20 13:24:30','anonymity','2024-08-20 13:24:30'),(5,4,'1','main','暂无','1','/{projectName}/src/main',NULL,NULL,1,NULL,NULL,'anonymity','2024-08-20 13:24:45','anonymity','2024-08-20 13:24:45'),(6,4,'1','test','暂无','1','/{projectName}/src/test',NULL,NULL,1,NULL,NULL,'anonymity','2024-08-20 13:24:48','anonymity','2024-08-20 13:24:48'),(7,6,'1','java','暂无','1','/{projectName}/src/test/java',NULL,NULL,1,NULL,NULL,'anonymity','2024-08-20 13:25:12','anonymity','2024-08-20 13:25:12'),(8,6,'1','resources','暂无','1','/{projectName}/src/test/resources',NULL,NULL,1,NULL,NULL,'anonymity','2024-08-20 13:25:15','anonymity','2024-08-20 13:25:15'),(9,5,'1','resources','暂无','1','/{projectName}/src/main/resources',NULL,NULL,1,NULL,NULL,'anonymity','2024-08-20 13:25:25','anonymity','2024-08-20 13:25:25'),(10,5,'1','java','暂无','1','/{projectName}/src/main/java',NULL,NULL,2,NULL,NULL,'anonymity','2024-08-20 13:25:31','anonymity','2024-08-20 13:25:31'),(11,9,'1','mapper','暂无','1','/{projectName}/src/main/resources/mapper',NULL,NULL,1,NULL,NULL,'anonymity','2024-08-20 13:28:00','anonymity','2024-08-20 13:28:00'),(12,10,'1','{packageName}','暂无','2','/{projectName}/src/main/java/{packageName}','/{packageName}',NULL,1,NULL,NULL,'anonymity','2024-08-20 13:28:18','anonymity','2024-08-20 13:28:18'),(13,12,'1','module','暂无','2','/{projectName}/src/main/java/{packageName}/module','/{packageName}/module',NULL,1,NULL,NULL,'anonymity','2024-08-20 13:28:26','anonymity','2024-08-20 13:28:26'),(14,13,'1','{moduleName}','暂无','2','/{projectName}/src/main/java/{packageName}/module/{moduleName}','/{packageName}/module/{moduleName}',NULL,1,NULL,NULL,'anonymity','2024-08-20 13:28:36','anonymity','2024-08-20 13:28:36'),(15,14,'1','controller','暂无','2','/{projectName}/src/main/java/{packageName}/module/{moduleName}/controller','/{packageName}/module/{moduleName}/controller',NULL,3,NULL,NULL,'anonymity','2024-08-20 13:28:54','anonymity','2024-08-20 13:28:54'),(16,14,'1','convert','暂无','2','/{projectName}/src/main/java/{packageName}/module/{moduleName}/convert','/{packageName}/module/{moduleName}/convert',NULL,3,NULL,NULL,'anonymity','2024-08-20 13:29:34','anonymity','2024-08-20 13:29:34'),(17,14,'1','domain','暂无','2','/{projectName}/src/main/java/{packageName}/module/{moduleName}/domain','/{packageName}/module/{moduleName}/domain',NULL,2,NULL,NULL,'anonymity','2024-08-20 13:29:40','anonymity','2024-08-20 13:29:40'),(18,14,'1','mapper','暂无','2','/{projectName}/src/main/java/{packageName}/module/{moduleName}/mapper','/{packageName}/module/{moduleName}/mapper',NULL,2,NULL,NULL,'anonymity','2024-08-20 13:30:05','anonymity','2024-08-20 13:30:05'),(19,14,'1','service','暂无','2','/{projectName}/src/main/java/{packageName}/module/{moduleName}/service','/{packageName}/module/{moduleName}/service',NULL,2,NULL,NULL,'anonymity','2024-08-20 13:30:10','anonymity','2024-08-20 13:30:10'),(20,14,'1','package-info.java','暂无','3','/{projectName}/src/main/java/{packageName}/module/{moduleName}/package-info.java','/{packageName}/module/{moduleName}','/**\n* 描述 ：${serviceDesc}\n*\n* @author ${author}\n**/\npackage ${fileCodePath};\n',1,'',NULL,'anonymity','2024-08-20 13:30:22','anonymity','2024-08-20 13:30:22'),(21,19,'1','impl','暂无','2','/{projectName}/src/main/java/{packageName}/module/{moduleName}/service/impl','/{packageName}/module/{moduleName}/service/impl',NULL,1,NULL,NULL,'anonymity','2024-08-20 13:31:14','anonymity','2024-08-20 13:31:14'),(22,17,'1','dataobject','暂无','2','/{projectName}/src/main/java/{packageName}/module/{moduleName}/domain/dataobject','/{packageName}/module/{moduleName}/domain/dataobject',NULL,1,NULL,NULL,'anonymity','2024-08-20 13:31:31','anonymity','2024-08-20 13:31:31'),(23,17,'1','request','暂无','2','/{projectName}/src/main/java/{packageName}/module/{moduleName}/domain/request','/{packageName}/module/{moduleName}/domain/request',NULL,1,NULL,NULL,'anonymity','2024-08-20 13:31:36','anonymity','2024-08-20 13:31:36'),(24,17,'1','response','暂无','2','/{projectName}/src/main/java/{packageName}/module/{moduleName}/domain/response','/{packageName}/module/{moduleName}/domain/response',NULL,1,NULL,NULL,'anonymity','2024-08-20 13:31:41','anonymity','2024-08-20 13:31:41'),(25,15,'1','{fileName}Controller.java','暂无','3','/{projectName}/src/main/java/{packageName}/module/{moduleName}/controller/{fileName}Controller.java','/{packageName}/module/{moduleName}/controller','package ${fileCodePath};\n\nimport com.xht.cloud.framework.core.R;\nimport com.xht.cloud.framework.core.domain.response.PageResponse;\nimport ${packageName}.module.${moduleName}.domain.request.${className}CreateRequest;\nimport ${packageName}.module.${moduleName}.domain.request.${className}QueryRequest;\nimport ${packageName}.module.${moduleName}.domain.request.${className}UpdateRequest;\nimport ${packageName}.module.${moduleName}.domain.response.${className}Response;\nimport ${packageName}.module.${moduleName}.service.I${className}Service;\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.tags.Tag;\nimport lombok.RequiredArgsConstructor;\nimport org.springframework.validation.annotation.Validated;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.List;\n\nimport static com.xht.cloud.framework.core.R.ok;\n\n/**\n * ${serviceDesc}\n *\n * @author ${author}\n */\n@Tag(name = \"${serviceDesc}\", description = \"${serviceName}\")\n@RestController\n@RequestMapping(\"${pathUrl}\")\n@RequiredArgsConstructor\npublic class ${className}Controller {\n\n    private final I${className}Service ${classNameFirstLower}Service;\n\n    /**\n     * 新增\n     *\n     * @param createRequest {@link ${className}CreateRequest} 创建参数\n     * @return {@link Boolean} true成功 false失败\n     */\n    @Operation(summary = \"新增\")\n    @PostMapping\n    public R<Boolean> create(@Validated @RequestBody ${className}CreateRequest createRequest) {\n        return ok(${classNameFirstLower}Service.create(createRequest));\n    }\n\n    /**\n     * 修改\n     *\n     * @param updateRequest {@link ${className}UpdateRequest} 修改参数\n     * @return {@linkplain Boolean} true成功 false失败\n     */\n    @Operation(summary = \"修改\")\n    @PutMapping\n    public R<Boolean> update(@Validated @RequestBody ${className}UpdateRequest updateRequest) {\n        return ok(${classNameFirstLower}Service.update(updateRequest));\n    }\n\n    /**\n     * 删除\n     *\n     * @param ids id集合\n     * @return {@link Boolean} true成功 false失败\n     */\n    @Operation(summary = \"删除\")\n    @DeleteMapping\n    public R<Boolean> remove(@RequestBody List<${pkColumn.javaName}> ids) {\n        return ok(${classNameFirstLower}Service.remove(ids));\n    }\n\n    /**\n     * 查询详细\n     *\n     * @param id 数据库主键\n     * @return {@link ${className}Response} 文件详细\n     */\n    @Operation(summary = \"查询详细\")\n    @GetMapping(\"/{id}\")\n    public R<${className}Response> findById(@PathVariable(\"id\") ${pkColumn.javaName} id) {\n        return R.ok(${classNameFirstLower}Service.findById(id));\n    }\n\n    /**\n     * 分页查询\n     *\n     * @param queryRequest {@link ${className}QueryRequest} 查询参数\n     * @return 分页详情\n     */\n    @Operation(summary = \"分页查询\")\n    @GetMapping\n    public R<PageResponse<${className}Response>> findPage(@Validated ${className}QueryRequest queryRequest) {\n        return R.ok(${classNameFirstLower}Service.findPage(queryRequest));\n    }\n\n}\n',1,'',NULL,'anonymity','2024-08-20 13:32:28','anonymity','2024-08-20 13:32:28'),(26,16,'1','{fileName}Convert.java','暂无','3','/{projectName}/src/main/java/{packageName}/module/{moduleName}/convert/{fileName}Convert.java','/{packageName}/module/{moduleName}/convert','package com.xht.cloud.generate.module.filedisk.convert;\n\nimport com.xht.cloud.framework.mybatis.convert.IBaseConvert;\nimport ${packageName}.module.${moduleName}.domain.dataobject.${className}DO;\nimport ${packageName}.module.${moduleName}.domain.request.${className}CreateRequest;\nimport ${packageName}.module.${moduleName}.domain.request.${className}QueryRequest;\nimport ${packageName}.module.${moduleName}.domain.request.${className}UpdateRequest;\nimport ${packageName}.module.${moduleName}.domain.response.${className}Response;\nimport org.mapstruct.Mapper;\n\n/**\n * ${serviceDesc}\n *\n * @author ${author}\n */\n@Mapper(componentModel = \"spring\")\npublic interface ${className}Convert extends IBaseConvert<${className}CreateRequest, ${className}UpdateRequest, ${className}QueryRequest, ${className}Response, ${className}DO> {\n\n}\n',1,'',NULL,'anonymity','2024-08-20 13:47:21','anonymity','2024-08-20 13:47:21'),(27,22,'1','{fileName}DO.java','暂无','3','/{projectName}/src/main/java/{packageName}/module/{moduleName}/domain/dataobject/{fileName}DO.java','/{packageName}/module/{moduleName}/domain/dataobject','package ${fileCodePath};\n\nimport com.baomidou.mybatisplus.annotation.IdType;\nimport com.baomidou.mybatisplus.annotation.TableField;\nimport com.baomidou.mybatisplus.annotation.TableId;\nimport com.baomidou.mybatisplus.annotation.TableName;\nimport com.xht.cloud.framework.mybatis.dataobject.BaseDO;\nimport lombok.Data;\n\nimport java.io.Serializable;\n\n/**\n * ${serviceDesc}\n *\n * @author ${author}\n */\n@Data\n@TableName(\"${tableName}\")\npublic class ${className}DO extends BaseDO implements Serializable {\n\n#foreach ($column in ${columns})\n    /**\n     * ${column.columnComment}\n     */\n#if(${column.columnName} == ${pkColumn.columnName})\n    @TableId(value = \"${column.columnName}\", type = IdType.ASSIGN_ID)\n#elseif(${column.columnPk} == \'0\')\n    @TableField(value = \"${column.columnName}\")\n#end\n    private ${column.javaName} ${column.columnCodeName};\n\n#end\n}\n',1,'create_time,create_by,update_time,update_by,del_flag',NULL,'anonymity','2024-08-20 13:47:44','anonymity','2024-08-20 13:47:44'),(28,23,'1','{fileName}CreateRequest.java','暂无','3','/{projectName}/src/main/java/{packageName}/module/{moduleName}/domain/request/{fileName}CreateRequest.java','/{packageName}/module/{moduleName}/domain/request','package ${fileCodePath};\n\nimport com.xht.cloud.framework.core.domain.request.CreateRequest;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport jakarta.validation.constraints.NotBlank;\nimport lombok.Data;\n\n/**\n * ${serviceDesc}\n *\n * @author ${author}\n */\n@Data\n@Schema(name = \"${className}CreateRequest\", description = \"${serviceDesc}\")\npublic class ${className}CreateRequest extends CreateRequest {\n  \n#foreach ($column in ${operationColumns})\n    /**\n     * ${column.columnComment}\n     */\n#if(${column.columnRequired} == \'1\')\n    @NotBlank(message = \"${column.columnComment}: 数据格式不合法\")\n#end\n    @Schema(description = \"${column.columnComment}\")\n    private ${column.javaName} ${column.columnCodeName};\n\n#end\n}\n',1,'create_time,create_by,update_time,update_by,del_flag',NULL,'anonymity','2024-08-20 13:48:00','anonymity','2024-08-20 13:48:00'),(29,23,'1','{fileName}QueryRequest.java','暂无','3','/{projectName}/src/main/java/{packageName}/module/{moduleName}/domain/request/{fileName}QueryRequest.java','/{packageName}/module/{moduleName}/domain/request','package ${fileCodePath};\n\nimport com.xht.cloud.framework.core.domain.request.PageQueryRequest;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport lombok.Data;\n\n/**\n * ${serviceDesc}\n *\n * @author ${author}\n */\n@Data\n@Schema(name = \"${className}QueryRequest\", description = \"${serviceDesc}\")\npublic class ${className}QueryRequest extends PageQueryRequest {\n\n#foreach ($column in ${queryColumns})\n    /**\n     * ${column.columnComment}\n     */\n    @Schema(description = \"${column.columnComment}\")\n    private ${column.javaName} ${column.columnCodeName};\n\n#end  \n}\n',1,'create_time,create_by,update_time,update_by,del_flag',NULL,'anonymity','2024-08-20 13:48:17','anonymity','2024-08-20 13:48:17'),(30,23,'1','{fileName}UpdateRequest.java','暂无','3','/{projectName}/src/main/java/{packageName}/module/{moduleName}/domain/request/{fileName}UpdateRequest.java','/{packageName}/module/{moduleName}/domain/request','package ${fileCodePath};\n\nimport com.xht.cloud.framework.core.domain.request.IUpdateRequestFun;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport lombok.Data;\n\n/**\n * ${serviceDesc}\n *\n * @author ${author}\n */\n@Data\n@Schema(name = \"${className}UpdateRequest\", description = \"${serviceDesc}\")\npublic class ${className}UpdateRequest extends ${className}CreateRequest implements IUpdateRequestFun<${pkColumn.javaName}> {\n\n    /**\n     * ${pkColumn.columnCodeName}\n     */\n    @Schema(description = \"主键\")\n    private ${pkColumn.javaName} ${pkColumn.columnCodeName};\n\n    /**\n     * 获取主键\n     */\n    @Override\n    public Long getPkId() {\n        return this.${pkColumn.columnCodeName};\n    }\n\n}\n',1,'create_time,create_by,update_time,update_by,del_flag',NULL,'anonymity','2024-08-20 13:48:48','anonymity','2024-08-20 13:48:48'),(31,18,'1','{fileName}Mapper.java','暂无','3','/{projectName}/src/main/java/{packageName}/module/{moduleName}/mapper/{fileName}Mapper.java','/{packageName}/module/{moduleName}/mapper','package ${fileCodePath};\n\nimport com.xht.cloud.framework.mybatis.mapper.BaseMapperX;\nimport ${packageName}.module.${moduleName}.domain.dataobject.${className}DO;\nimport org.apache.ibatis.annotations.Mapper;\n\n/**\n * ${serviceDesc}\n *\n * @author ${author}\n */\n@Mapper\npublic interface ${className}Mapper extends BaseMapperX<${className}DO> {\n\n}\n',1,'',NULL,'anonymity','2024-08-20 13:49:12','anonymity','2024-08-20 13:49:12'),(32,19,'1','I{fileName}Service.java','暂无','3','/{projectName}/src/main/java/{packageName}/module/{moduleName}/service/I{fileName}Service.java','/{packageName}/module/{moduleName}/service','package ${fileCodePath};\n\nimport com.xht.cloud.framework.core.domain.response.PageResponse;\nimport ${packageName}.module.${moduleName}.domain.request.${className}CreateRequest;\nimport ${packageName}.module.${moduleName}.domain.request.${className}QueryRequest;\nimport ${packageName}.module.${moduleName}.domain.request.${className}UpdateRequest;\nimport ${packageName}.module.${moduleName}.domain.response.${className}Response;\n\nimport java.util.List;\n\n/**\n * ${serviceDesc}\n *\n * @author ${author}\n */\npublic interface I${className}Service {\n\n    /**\n     * 创建${serviceDesc}\n     *\n     * @param createRequest {@link ${className}CreateRequest} 创建参数\n     */\n    boolean create(${className}CreateRequest createRequest);\n\n\n    /**\n     * 根据主键修改${serviceDesc}\n     *\n     * @param updateRequest {@link ${className}UpdateRequest} 修改参数\n     */\n    boolean update(${className}UpdateRequest updateRequest);\n\n    /**\n     * 根据主键删除\n     *\n     * @param ids 主键集合\n     */\n    boolean remove(List<${pkColumn.javaName}> ids);\n\n    /**\n     * 根据主键查询${serviceDesc}详细\n     *\n     * @param id 数据库主键\n     * @return {@link ${className}Response} 数据详细\n     */\n    ${className}Response findById(${pkColumn.javaName} id);\n\n    /**\n     * 分页查询${serviceDesc}\n     *\n     * @param queryRequest {@link ${className}QueryRequest} 查询参数\n     * @return 分页数据\n     */\n    PageResponse<${className}Response> findPage(${className}QueryRequest queryRequest);\n}\n',1,'',NULL,'anonymity','2024-08-20 13:49:33','anonymity','2024-08-20 13:49:33'),(33,21,'1','{fileName}ServiceImpl.java','暂无','3','/{projectName}/src/main/java/{packageName}/module/{moduleName}/service/impl/{fileName}ServiceImpl.java','/{packageName}/module/{moduleName}/service/impl','package ${fileCodePath};\n\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.xht.cloud.framework.core.domain.response.PageResponse;\nimport com.xht.cloud.framework.exception.Assert;\nimport com.xht.cloud.framework.mybatis.tool.PageTool;\nimport com.xht.cloud.framework.mybatis.tool.SqlHelper;\nimport com.xht.cloud.framework.utils.support.StringUtils;\nimport ${packageName}.module.${moduleName}.convert.${className}Convert;\nimport ${packageName}.module.${moduleName}.domain.dataobject.${className}DO;\nimport ${packageName}.module.${moduleName}.dao.${className}Dao;\nimport ${packageName}.module.${moduleName}.domain.request.${className}CreateRequest;\nimport ${packageName}.module.${moduleName}.domain.request.${className}QueryRequest;\nimport ${packageName}.module.${moduleName}.domain.request.${className}UpdateRequest;\nimport ${packageName}.module.${moduleName}.domain.response.${className}Response;\nimport ${packageName}.module.${moduleName}.service.I${className}Service;\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport java.util.List;\nimport java.util.Objects;\n\n/**\n * ${serviceDesc}\n *\n * @author ${author}\n */\n@Slf4j\n@Service\n@RequiredArgsConstructor\npublic class ${className}ServiceImpl implements I${className}Service {\n\n    private final ${className}Dao ${classNameFirstLower}Dao;\n\n    private final ${className}Convert ${classNameFirstLower}Convert;\n\n    /**\n     * 创建${serviceDesc}\n     *\n     * @param createRequest {@link ${className}CreateRequest} 创建参数\n     */\n    @Override\n    @Transactional(rollbackFor = Exception.class)\n    public boolean create(${className}CreateRequest createRequest) {\n        Assert.notNull(createRequest, \"createRequest ${serviceDesc}添加信息不能为空\");\n        ${className}DO ${classNameFirstLower}DO = ${classNameFirstLower}Convert.toDO(createRequest);\n        return ${classNameFirstLower}Dao.save(${classNameFirstLower}DO);\n    }\n\n    /**\n     * 根据主键修改${serviceDesc}\n     *\n     * @param updateRequest {@link ${className}UpdateRequest} 修改参数\n     */\n    @Override\n    @Transactional(rollbackFor = Exception.class)\n    public boolean update(${className}UpdateRequest updateRequest) {\n        Assert.notNull(updateRequest, \"updateRequest ${serviceDesc}修改信息不能为空\");\n        return ${classNameFirstLower}Dao.update(${classNameFirstLower}Convert.toDO(updateRequest));\n    }\n\n    /**\n     * 根据主键删除${serviceDesc}\n     *\n     * @param ids 主键集合\n     */\n    @Override\n    @Transactional(rollbackFor = Exception.class)\n    public boolean remove(List<${pkColumn.javaName}> ids) {\n        Assert.notEmpty(pkIds, \"id 不能为空！\");\n        return ${classNameFirstLower}Dao.removeByIds(pkIds);\n    }\n\n    /**\n     * 根据主键查询${serviceDesc}详细\n     *\n     * @param id 数据库主键\n     * @return {@link ${className}Response} 数据详细\n     */\n    @Override\n    public ${className}Response findById(${pkColumn.javaName} id) {\n        Assert.notNull(id, \"id 不能为空！\");\n        return ${classNameFirstLower}Convert.toResponse(${classNameFirstLower}Dao.getById(id));\n    }\n\n    /**\n     * 分页查询${serviceDesc}\n     *\n     * @param queryRequest {@link ${className}QueryRequest} 查询参数\n     * @return 分页详情\n     */\n    @Override\n    public PageResponse<${className}Response> findPage(${className}QueryRequest queryRequest) {\n        Page<${className}DO> page = PageTool.getPage(queryRequest);\n        LambdaQueryWrapper<${className}DO> queryWrapper = new LambdaQueryWrapper<>();        \n        // @formatter:off\n        queryWrapper\n#foreach ($column in ${queryColumns})\n                .eq(Objects.nonNull(queryRequest.${column.columnNameGet}()), ${className}DO::${column.columnNameGet}, queryRequest.${column.columnNameGet}())\n#end\n			;\n        // @formatter:on\n        return ${classNameFirstLower}Convert.toPageResponse(${classNameFirstLower}Dao.page(page, queryWrapper));\n    }\n}\n',1,'',NULL,'anonymity','2024-08-20 13:49:49','anonymity','2024-08-20 13:49:49'),(34,2,'1','src','暂无','1','/web/src',NULL,NULL,1,NULL,NULL,'anonymity','2024-08-20 14:05:44','anonymity','2024-08-20 14:05:44'),(35,34,'1','api','暂无','2','/web/src/api','/api',NULL,1,NULL,NULL,'anonymity','2024-08-20 14:05:51','anonymity','2024-08-20 14:05:51'),(36,34,'1','views','暂无','2','/web/src/views','/views',NULL,1,NULL,NULL,'anonymity','2024-08-20 14:05:56','anonymity','2024-08-20 14:05:56'),(37,35,'1','{moduleName}','暂无','2','/web/src/api/{moduleName}','/api/{moduleName}',NULL,1,NULL,NULL,'anonymity','2024-08-20 14:06:37','anonymity','2024-08-20 14:06:37'),(38,37,'1','{serviceName}','暂无','2','/web/src/api/{moduleName}/{serviceName}','/api/{moduleName}/{serviceName}',NULL,1,NULL,NULL,'anonymity','2024-08-20 14:06:48','anonymity','2024-08-20 14:06:48'),(39,38,'1','constant.ts','暂无','3','/web/src/api/{moduleName}/{serviceName}/constant.ts','/api/{moduleName}/{serviceName}','import type { FormRules } from \"element-plus\";\nimport type { ${className}OperationReq } from \"@/api/${${fileCodePath2}/type\";\nimport type { ColumnOption } from \"@/components/right-tool-bar/types\";\n\n/**\n * 增改页面 表单类型 默认值\n */\nexport const ${className}OperationForm: ${className}OperationReq = {\n#foreach($column in $operationColumns)\n    ${column.columnCodeName}: #if($column.tsName==\'string\')\'\'#elseif($column.tsName==\'number\')0#elseif($column.tsName==\'boolean\')false#elseif($column.tsName==\'number\')0#elseif($column.tsName==\'any\')null#elseif($column.tsName==\'Date\')new Date()#end#if($foreach.hasNext),#end // $column.columnComment\n#end\n}\n\n/**\n * 增改页面 页面配置类型 默认值\n */\nexport const ${className}OperationPageInit: OperationPageInit = {\n    title: \'添加${serviceDesc}\',\n    submitTitle: \'添加\',\n    visibleStatus: false,\n    loadingStatus: false,\n    fullScreenStatus: false,\n    operationStatus: \'save\'\n}\n\n/**\n * 增改表单正则\n */\nexport const ${className}OperationRules: FormRules = {\n#foreach($column in $requiredColumns)\n    ${column.columnCodeName}: [{ required: true, message: \'${column.columnComment}数据格式不能为空\', trigger: [\'blur\', \'change\'] }]#if($foreach.hasNext),#end\n#end\n}\n\n\n/**\n * 列表显示配置\n */\nexport const ${className}ColumnOption: ColumnOption[] = [\n#foreach($column in $listColumns)  \n    { value: \'${column.columnCodeName}\', name: \'${column.columnComment}\', visible: true, disabled: false }#if($foreach.hasNext),#end\n#end      \n]\n\n',1,'',NULL,'anonymity','2024-08-20 14:07:07','anonymity','2024-08-20 14:07:07'),(40,38,'1','index.ts','暂无','3','/web/src/api/{moduleName}/{serviceName}/index.ts','/api/{moduleName}/{serviceName}','import request from \'@/utils/request\'\nimport type { ${className}OperationReq, ${className}QueryReq, ${className}Response } from \"@/${fileCodePath2}/type\";\nimport type { AxiosPromise, PageResponse } from \"axios\";\n\nconst baseURL: string = import.meta.env.VITE_APP_XHT_CLOUD_GENERATOR_PREFIX\n\n/**\n * 保存/添加代码生成器-字段类型对应\n * @param data 数据\n */\nexport const save${className} = (data: ${className}OperationReq): AxiosPromise<boolean> => {\n	return request({\n		baseURL,\n		url: \'${pathUrl}\',\n		method: \'post\',\n		headers: {},\n		data: data\n	})\n}\n\n/**\n * 根据id删除代码生成器-字段类型对应\n * @param ids\n */\nexport const delete${className}ById = (ids: any[]): AxiosPromise<boolean> => {\n	return request({\n		baseURL,\n		url: \'${pathUrl}\',\n		method: \'delete\',\n		headers: {},\n		data: ids\n	})\n}\n\n/**\n * 修改代码生成器-字段类型对应\n * @param data 数据\n */\nexport const update${className} = (data: ${className}OperationReq): AxiosPromise<boolean> => {\n	return request({\n		baseURL,\n		url: \'${pathUrl}\',\n		method: \'put\',\n		headers: {},\n		data: data\n	})\n}\n\n/**\n * 根据Id查询代码生成器-字段类型对应\n * @param id id\n */\nexport const get${className}ById = (id: string): AxiosPromise<${className}Response> => {\n	return request({\n		baseURL,\n		url: `${pathUrl}/${id}`,\n		method: \'get\',\n		headers: {}\n	})\n}\n\n/**\n * 分页查询代码生成器-字段类型对应\n * @param data 数据\n */\nexport const get${className}Page = (data: ${className}QueryReq): AxiosPromise<PageResponse<${className}Response>> => {\n	return request({\n		baseURL,\n		url: \'${pathUrl}\',\n		method: \'get\',\n		headers: {},\n		params: data\n	})\n}\n',1,'',NULL,'anonymity','2024-08-20 14:07:13','anonymity','2024-08-20 14:07:13'),(41,38,'1','type.ts','暂无','3','/web/src/api/{moduleName}/{serviceName}/type.ts','/api/{moduleName}/{serviceName}','/**\n * ${serviceDesc}查询类型\n */\nexport interface ${className}QueryReq extends CrudQueryFrom {\n#foreach($column in $queryColumns)\n    ${column.columnCodeName}?: ${column.tsName} // $column.columnComment\n#end\n}\n\n/**\n * ${serviceDesc}操作类型\n */\nexport interface ${className}OperationReq extends OperationReq {\n#foreach($column in $operationColumns)\n    ${column.columnCodeName}: ${column.tsName} // $column.columnComment\n#end\n}\n\n/**\n * ${serviceDesc}返回值\n */\nexport interface ${className}Response extends CrudOptions {\n#foreach($column in $listColumns)\n    ${column.columnCodeName}: ${column.tsName} // $column.columnComment\n#end\n}\n',1,'',NULL,'anonymity','2024-08-20 14:07:19','anonymity','2024-08-20 14:07:19'),(42,36,'1','{moduleName}','暂无','2','/web/src/views/{moduleName}','/views/{moduleName}',NULL,1,NULL,NULL,'anonymity','2024-08-20 14:07:33','anonymity','2024-08-20 14:07:33'),(43,42,'1','{serviceName}','暂无','2','/web/src/views/{moduleName}/{serviceName}','/views/{moduleName}/{serviceName}',NULL,1,NULL,NULL,'anonymity','2024-08-20 14:07:41','anonymity','2024-08-20 14:07:41'),(44,43,'1','index.vue','暂无','3','/web/src/views/{moduleName}/{serviceName}/index.vue','/views/{moduleName}/{serviceName}','<template>\n	<div class=\"main-container-none\">\n		<el-form ref=\"queryFormRef\" :disabled=\"state.loadingStatus\" :model=\"queryParams\" class=\"user-select-display\"\n			label-width=\"100px\">\n			<xht-card class=\"mb-10\">\n				<el-row v-if=\"state.showSearch\">\n#foreach($column in $queryColumns)\n					<el-col :span=\"6\">\n						<el-form-item label=\"${column.columnComment}\" prop=\"${column.columnCodeName}\">\n							<el-input v-model=\"queryParams.${column.columnCodeName}\" :maxlength=\"${column.columnLength}\" show-word-limit clearable\n								placeholder=\"请输入${column.columnComment}\" />\n						</el-form-item>\n					</el-col>\n#end\n					<el-col :span=\"6\" class=\"text-center\">\n						<el-button icon=\"Search\" type=\"primary\" @click=\"handleQuery()\">\n							查询\n						</el-button>\n						<el-button icon=\"Refresh\" @click=\"resetQuery\">重置</el-button>\n					</el-col>\n				</el-row>\n				<el-row>\n					<el-col :span=\"12\">\n						<el-button icon=\"Plus\" type=\"primary\" @click=\"handleAdd\">增加</el-button>\n						<el-button :disabled=\"state.singleStatus\" icon=\"edit\" type=\"success\"\n							@click=\"handleUpdate(null)\">\n							修改\n						</el-button>\n						<el-button :disabled=\"state.multipleStatus\" icon=\"delete\" type=\"danger\"\n							@click=\"handleDelete(null)\">\n							删除\n						</el-button>\n					</el-col>\n					<el-col :span=\"12\">\n						<right-tool-bar v-model:column-data=\"sourceColumnOption\" column-status refresh-status\n							search-status v-model:show-search=\"state.showSearch\" @refresh=\"handleQuery\" />\n					</el-col>\n				</el-row>\n			</xht-card>\n		</el-form>\n		<div class=\"main-container-view main-container-auto\">\n			<el-table ref=\"tableRef\" v-loading=\"state.loadingStatus\" :cell-style=\"tableStyle.cellStyle\"\n				:data=\"state.tableList\" :header-cell-style=\"tableStyle.headerCellStyle\" border empty-text=\"无法查找到${serviceDesc}\"\n				@sort-change=\"handleQuery\" @selection-change=\"handleSelectionChange\">\n				<el-table-column type=\"selection\" width=\"55\" />\n				<el-table-column :index=\"createTableIndex\" label=\"序号\" type=\"index\" width=\"55\" />\n#foreach($column in $listColumns)\n				<el-table-column label=\"${column.columnComment}\" prop=\"${column.columnCodeName}\" v-if=\"columnOption.${column.columnCodeName}\" />\n#end  \n				<el-table-column fixed=\"right\" label=\"操作\" width=\"220px\">\n					<template #default=\"{ row }\">\n						<el-button icon=\"edit\" link type=\"success\" @click=\"handleUpdate(row)\">\n							修改\n						</el-button>\n						<el-button icon=\"delete\" link type=\"danger\" @click=\"handleDelete(row)\">\n							删除\n						</el-button>\n					</template>\n				</el-table-column>\n			</el-table>\n			<xht-pagination v-model:current-page=\"queryParams.current\" v-model:page-size=\"queryParams.size\"\n				:page-count=\"state.pages\" :total=\"state.total\" @pagination=\"handleQuery\" />\n		</div>\n		<add-or-update ref=\"addUpdateRef\" @success=\"handleQuery\" />\n	</div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { ${className}QueryReq, ${className}Response } from \"@/api/${moduleName}/${serviceName}/type\";\nimport { useTableQueryHooks } from \"@/hooks/use-crud-hooks\";\nimport { delete${className}ById, get${className}Page } from \"@/api/${moduleName}/${serviceName}\";\nimport { useColumnOptionHooks } from \"@/hooks/use-column-option\";\nimport { ${className}ColumnOption } from \"@/api/${moduleName}/${serviceName}/constant\";\nimport { toReactive } from \"@vueuse/core\";\nimport type { ElTable, FormInstance } from \"element-plus\";\nimport { useMessage, useMessageBox } from \"@/hooks/use-message\";\n\ndefineOptions({ name: \'${className}ViewIndex\' })\nconst AddOrUpdate = defineAsyncComponent(() => import(\'@/${fileCodePath2}/components/add-or-update.vue\'))\nconst state = reactive<BasicTableQueryOptions<${className}QueryReq, ${className}Response>>({\n	loadingStatus: false,\n	queryParams: {\n		descName: \'id\'\n	},\n	tableList: []\n})\nconst {\n	tableStyle,\n	createTableIndex,\n	handleSelectionChange,\n	handleQuery\n} = useTableQueryHooks<${className}QueryReq, ${className}Response>(state, get${className}Page)\nconst {\n	columnOption,\n	sourceColumnOption\n} = useColumnOptionHooks(${className}ColumnOption)\nconst { queryParams } = toReactive(state)\n\nconst queryFormRef = ref<FormInstance>()\nconst addUpdateRef = ref<any>()\nconst tableRef = ref<InstanceType<typeof ElTable>>()\n\n\n/**\n * 重置表单\n */\nconst resetQuery = async () => {\n	queryFormRef.value?.resetFields()\n	tableRef.value?.clearSort()\n	queryParams.ascName = \'\'\n	queryParams.descName = \'\'\n	await handleQuery()\n}\n\n\n/**\n * 添加按钮操作\n */\nconst handleAdd = () => {\n	addUpdateRef.value?.show(null)\n}\n\n/**\n * 修改按钮操作\n * @param row 当前行信息、按钮本身信息\n */\nconst handleUpdate = (row: ${className}Response | null) => {\n	addUpdateRef.value?.show(row?.id || (state.checkId as number[])[0])\n}\n\n/**\n * 删除按钮操作\n * @param row 当前行信息\n */\nconst handleDelete = async (row: ${className}Response | null) => {\n	state.loadingStatus = true\n	let reqIds: number[] = row?.id ? [row.id] : state.checkId || []\n	await useMessageBox()\n		.confirm(\'此操作将永久删除, 是否继续?\')\n		.then(async () => {\n			await delete${className}ById(reqIds).then(async () => {\n				useMessage().success(\'删除${serviceDesc}成功!\')\n				await handleQuery()\n			})\n		})\n		.finally(() => {\n			state.loadingStatus = false\n		})\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n',1,'',NULL,'anonymity','2024-08-20 14:07:52','anonymity','2024-08-20 14:07:52'),(45,43,'1','components','暂无','2','/web/src/views/{moduleName}/{serviceName}/components','/views/{moduleName}/{serviceName}/components',NULL,2,NULL,NULL,'anonymity','2024-08-20 14:08:11','anonymity','2024-08-20 14:08:11'),(46,45,'1','add-or-update.vue','暂无','3','/web/src/views/{moduleName}/{serviceName}/components/add-or-update.vue','/views/{moduleName}/{serviceName}/components','<template>\n	<el-dialog v-model=\"addUpdatePageInit.visibleStatus\" :before-close=\"close\" :close-on-click-modal=\"false\"\n		:title=\"addUpdatePageInit.title\" append-to-body>\n		<el-form ref=\"addUpdateFormRef\" v-loading=\"addUpdatePageInit.loadingStatus\" :model=\"addUpdateForm\"\n			:rules=\"rules\" element-loading-text=\"拼命加载中\" label-width=\"120px\">\n#foreach($column in $operationColumns)			\n              <el-row>\n				<el-col :span=\"24\">\n					<el-form-item label=\"${column.columnComment}\" prop=\"${column.columnCodeName}\">\n						<el-input v-model=\"addUpdateForm.${column.columnCodeName}\" :maxlength=\"${column.columnLength}\" clearable placeholder=\"请输入${column.columnComment}\"\n							show-word-limit />\n					</el-form-item>\n				</el-col>\n			</el-row>\n#end\n		</el-form>\n		<template #footer>\n			<el-button :disabled=\"addUpdatePageInit.loadingStatus\" type=\"primary\" @click=\"submitForm\">\n				{{ addUpdatePageInit.submitTitle }}\n			</el-button>\n			<el-button @click=\"close\">取 消</el-button>\n		</template>\n	</el-dialog>\n\n</template>\n\n<script setup lang=\"ts\">\nimport type { ${className}OperationReq } from \"@/api/${moduleName}/${serviceName}/type\";\nimport { ${className}OperationForm, ${className}OperationPageInit, ${className}OperationRules } from \"@/api/${moduleName}/${serviceName}/constant\";\nimport type { FormInstance, FormRules } from \"element-plus\";\nimport { get${className}ById, save${className}, update${className} } from \"@/api/${moduleName}/${serviceName}\";\nimport { useMessage } from \"@/hooks/use-message\";\nimport { errorFormParams } from \"@/utils/moudle/element\";\n\ndefineOptions({ name: \'${className}ViewAddUpdate\' })\nconst state = reactive<BasicOperationPageInit<${className}OperationReq>>({\n	addUpdatePageInit: {\n		...${className}OperationPageInit\n	},\n	addUpdateForm: { ...${className}OperationForm }\n})\n\nconst rules = reactive<FormRules>(${className}OperationRules)\nconst emit = defineEmits([\'success\'])\nconst addUpdateFormRef = ref<FormInstance>()\nconst { addUpdatePageInit, addUpdateForm } = toRefs<BasicOperationPageInit<${className}OperationReq>>(state)\n/**\n * 打开显示\n */\nconst show = (id: number | null) => {\n	addUpdatePageInit.value.visibleStatus = true\n	getInfoById(id)\n}\n\n/**\n * 获取单表信息\n */\nconst getInfoById = async (id: number | null) => {\n	if (!id) return\n	addUpdatePageInit.value.loadingStatus = true\n	addUpdatePageInit.value.operationStatus = \'update\'\n	await get${className}ById(id)\n		.then((response: AxiosResponse<${className}Response>) => {\n			addUpdateForm.value = { ...response.data }\n			addUpdatePageInit.value.title = \'修改${serviceDesc}\'\n			addUpdatePageInit.value.submitTitle = \'修改\'\n		})\n		.finally(() => {\n			addUpdatePageInit.value.loadingStatus = false\n		})\n}\n\n/**\n * 提交表单\n */\nconst submitForm = () => {\n	addUpdatePageInit.value.visibleStatus = true\n	addUpdateFormRef.value?.validate(async (valid) => {\n		if (valid) {\n			if (addUpdatePageInit.value.operationStatus === \'save\') {\n				//增加\n				await save${className}(addUpdateForm.value)\n					.then((_) => {\n						useMessage().success(\'新增${serviceDesc}成功\')\n						emit(\'success\')\n						close()\n					})\n					.catch((err) => {\n						errorFormParams(err, addUpdateFormRef, addUpdateForm)\n					})\n					.finally(() => {\n						addUpdatePageInit.value.loadingStatus = false\n					})\n			} else {\n				//修改\n				await update${className}(addUpdateForm.value)\n					.then((_) => {\n						useMessage().success(\'修改${serviceDesc}成功\')\n						emit(\'success\')\n						close()\n					})\n					.catch((err) => {\n						errorFormParams(err, addUpdateFormRef, addUpdateForm)\n					})\n					.finally(() => {\n						addUpdatePageInit.value.loadingStatus = false\n					})\n			}\n		} else {\n			addUpdatePageInit.value.loadingStatus = false\n			useMessage().error(\'表单校验未通过，请重新检查提交内容\')\n		}\n	})\n}\n\n/**\n * 关闭\n */\nconst close = () => {\n	addUpdateForm.value = { ...${className}OperationForm }\n	addUpdatePageInit.value = {\n		...${className}OperationPageInit\n	}\n	addUpdateFormRef.value?.resetFields()\n}\n\ndefineExpose({\n	show\n})\n</script>\n\n<style lang=\"scss\" scoped></style>\n',1,'',NULL,'anonymity','2024-08-20 14:08:22','anonymity','2024-08-20 14:08:22'),(47,7,'1','{packageName}','暂无','2','/{projectName}/src/test/java/{packageName}','/{packageName}',NULL,1,NULL,NULL,'anonymity','2024-08-20 14:14:23','anonymity','2024-08-20 14:14:23'),(48,47,'1','module','暂无','2','/{projectName}/src/test/java/{packageName}/module','/{packageName}/module',NULL,1,NULL,NULL,'anonymity','2024-08-20 14:14:45','anonymity','2024-08-20 14:14:45'),(49,48,'1','{moduleName}','暂无','2','/{projectName}/src/test/java/{packageName}/module/{moduleName}','/{packageName}/module/{moduleName}',NULL,1,NULL,NULL,'anonymity','2024-08-20 14:15:15','anonymity','2024-08-20 14:15:15'),(50,3,'1','menu.sql','暂无','3','/sql/menu.sql','/sql','',1,'',NULL,'anonymity','2024-08-20 14:16:09','anonymity','2024-08-20 14:16:09'),(51,24,'1','{fileName}Response.java','暂无','3','/{projectName}/src/main/java/{packageName}/module/{moduleName}/domain/response/{fileName}Response.java','/{packageName}/module/{moduleName}/domain/response','package ${fileCodePath};\n\nimport com.xht.cloud.framework.core.domain.response.Response;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport lombok.Data;\n\n\n/**\n * ${serviceDesc}\n *\n * @author ${author}\n */\n@Data\n@Schema(name = \"${className}Response\", description = \"${serviceDesc}\")\npublic class ${className}Response extends Response {\n  \n#foreach ($column in ${listColumns})\n    /**\n     * ${column.columnComment}\n     */\n    @Schema(description = \"${column.columnComment}\")\n    private ${column.javaName} ${column.columnCodeName};\n\n#end  \n}\n',1,'create_time,create_by,update_time,update_by,del_flag',NULL,'anonymity','2024-08-20 14:23:06','anonymity','2024-08-20 14:23:06'),(52,14,'1','dao','暂无','2','/{projectName}/src/main/java/{packageName}/module/{moduleName}/dao','/{packageName}/module/{moduleName}/dao',NULL,3,NULL,NULL,'anonymity','2024-08-21 11:00:47','anonymity','2024-08-21 11:00:47'),(53,52,'1','{fileName}Dao.java','暂无','3','/{projectName}/src/main/java/{packageName}/module/{moduleName}/dao/{fileName}Dao.java','/{packageName}/module/{moduleName}/dao','package ${fileCodePath};\n\nimport com.baomidou.mybatisplus.core.conditions.update.LambdaUpdateWrapper;\nimport com.xht.cloud.framework.mybatis.dao.BaseDaoImpl;\nimport ${packageName}.module.${moduleName}.domain.dataobject.${className}DO;\nimport ${packageName}.module.${moduleName}.mapper.${className}Mapper;\nimport lombok.extern.slf4j.Slf4j;\nimport org.springframework.stereotype.Repository;\n\nimport java.util.Objects;\n\n/**\n * ${serviceDesc} DAO\n *\n * @author ${author}\n */\n@Slf4j\n@Repository\npublic class ${className}Dao extends BaseDaoImpl<${className}Mapper, ${className}DO> {\n    \n    /**\n     * 根据主键修改数据 \n     *\n     * @param entity 实体\n     * @return 修改\n     */\n    @Override\n    public boolean update(${className}DO entity) {\n        if (Objects.isNull(entity)) return Boolean.FALSE;\n        LambdaUpdateWrapper<${className}DO> updateWrapper = new LambdaUpdateWrapper<>();\n        // @formatter:off\n        updateWrapper\n#foreach ($column in $operationColumns)        \n                .set(Objects.nonNull(entity.${column.columnNameGet}()), ${className}DO::${column.columnNameGet}, entity.${column.columnNameGet}())\n#end      \n				.eq(${className}DO::${pkColumn.columnNameGet}, entity.${pkColumn.columnNameGet}());\n        // @formatter:on\n        return update(updateWrapper);\n    }\n}\n',1,'',NULL,'anonymity','2024-08-21 11:07:46','anonymity','2024-08-21 11:07:46'),(54,55,'1','{fileName}Mapper.xml','暂无','3','/{projectName}/src/main/resources/mapper/{moduleName}/{fileName}Mapper.xml','/{moduleName}','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"${packageName}.module.${moduleName}.mapper.${className}Mapper\">\n\n</mapper>\n',1,'',NULL,'anonymity','2024-08-21 19:06:13','anonymity','2024-08-21 19:06:13'),(55,11,'1','{moduleName}','暂无','2','/{projectName}/src/main/resources/mapper/{moduleName}','/{moduleName}',NULL,1,NULL,NULL,'anonymity','2024-08-22 15:57:50','anonymity','2024-08-22 15:57:50');
DROP TABLE IF EXISTS `gen_table`;
CREATE TABLE `gen_table` (
                             `id` bigint NOT NULL AUTO_INCREMENT,
                             `config_id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '配置中心',
                             `gen_db_id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '数据源id',
                             `table_schema` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '表所在的数据库名称',
                             `table_engine` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '数据库引擎',
                             `table_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '表名称',
                             `module_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '模块名称',
                             `service_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '业务名称',
                             `service_desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '业务描述',
                             `authorization_prefix` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '权限前缀',
                             `path_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT 'controller地址前缀',
                             `code_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '代码名称',
                             `parent_id` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '树表的上级id',
                             `parent_name` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '树表的名字',
                             `table_create_time` datetime DEFAULT NULL COMMENT '表创建时间',
                             `table_update_time` datetime DEFAULT NULL COMMENT '表更新时间',
                             `create_by` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '创建者',
                             `update_by` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '更新者',
                             `create_time` datetime DEFAULT NULL COMMENT '创建时间',
                             `update_time` datetime DEFAULT NULL COMMENT '更新时间',
                             PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='代码生成器-数据库表信息';
INSERT INTO `gen_table` (`id`, `config_id`, `gen_db_id`, `table_schema`, `table_engine`, `table_name`, `module_name`, `service_name`, `service_desc`, `authorization_prefix`, `path_url`, `code_name`, `parent_id`, `parent_name`, `table_create_time`, `table_update_time`, `create_by`, `update_by`, `create_time`, `update_time`) VALUES (1,'1','2','xht-cloud-mall','InnoDB','region_area','region','region','区域管理-地区表','region:area','/region/area','RegionArea',NULL,NULL,'2024-08-22 00:00:00','2024-08-22 00:00:00','anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(2,'1','2','xht-cloud-mall','InnoDB','region_area_ware','region','region','区域管理-城市仓库关联表','region:area-ware','/region/area/ware','RegionAreaWare',NULL,NULL,'2024-08-22 00:00:00','2024-08-22 00:00:00','anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(3,'1','2','xht-cloud-mall','InnoDB','region_ware','region','region','区域管理-仓库表','region:ware','/region/ware','RegionWare',NULL,NULL,'2024-08-22 00:00:00','2024-08-22 00:00:00','anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57');
DROP TABLE IF EXISTS `gen_table_column`;
CREATE TABLE `gen_table_column` (
                                    `id` bigint NOT NULL AUTO_INCREMENT,
                                    `table_id` varchar(36) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '表id',
                                    `column_name` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '字段名字',
                                    `column_length` int NOT NULL COMMENT '字段长度',
                                    `column_code_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '字段名字',
                                    `column_comment` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '字段描述',
                                    `column_db_type` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL COMMENT '数据库字段类型',
                                    `column_pk` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '0' COMMENT '是否主键（1是）',
                                    `column_list` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '是否列表（1是）',
                                    `column_operation` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '0' COMMENT '是否增加（1是）',
                                    `column_query` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '0' COMMENT '是否查询（1是）',
                                    `column_required` char(1) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT '0' COMMENT '是否必填（1是）',
                                    `column_sort` int DEFAULT NULL COMMENT '字段排序',
                                    `create_by` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '创建者',
                                    `update_by` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL COMMENT '更新者',
                                    `create_time` datetime DEFAULT NULL COMMENT '创建时间',
                                    `update_time` datetime DEFAULT NULL COMMENT '更新时间',
                                    PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC COMMENT='代码生成器-业务表字段';
INSERT INTO `gen_table_column` (`id`, `table_id`, `column_name`, `column_length`, `column_code_name`, `column_comment`, `column_db_type`, `column_pk`, `column_list`, `column_operation`, `column_query`, `column_required`, `column_sort`, `create_by`, `update_by`, `create_time`, `update_time`) VALUES (1,'1','id',0,'id','id','bigint','1','0','0','0','1',1,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(2,'1','parent_id',0,'parentId','上级id','bigint','0','1','1','1','1',2,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(3,'1','name',100,'name','名称','varchar','0','1','1','1','1',3,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(4,'1','del_flag',1,'delFlag','是否删除(1删除)','char','0','0','0','0','0',4,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(5,'1','create_time',0,'createTime','创建时间','timestamp','0','0','0','0','1',5,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(6,'1','create_by',64,'createBy','创建人','varchar','0','0','0','0','0',6,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(7,'1','update_time',0,'updateTime','更新时间','timestamp','0','0','0','0','1',7,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(8,'1','update_by',64,'updateBy','更新人','varchar','0','0','0','0','0',8,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(9,'2','id',0,'id','id','bigint','1','0','0','0','1',1,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(10,'2','region_id',0,'regionId','开通区域id','bigint','0','1','1','1','1',2,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(11,'2','region_name',30,'regionName','区域名称','varchar','0','1','1','1','1',3,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(12,'2','ware_id',0,'wareId','仓库','bigint','0','1','1','1','1',4,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(13,'2','ware_name',30,'wareName','仓库名称','varchar','0','1','1','1','1',5,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(14,'2','status',0,'status','状态（0：未开通 1：已开通）','tinyint','0','1','1','1','1',6,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(15,'2','del_flag',1,'delFlag','是否删除(1删除)','char','0','0','0','0','0',7,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(16,'2','create_time',0,'createTime','创建时间','timestamp','0','0','0','0','1',8,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(17,'2','create_by',64,'createBy','创建人','varchar','0','0','0','0','0',9,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(18,'2','update_time',0,'updateTime','更新时间','timestamp','0','0','0','0','1',10,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(19,'2','update_by',64,'updateBy','更新人','varchar','0','0','0','0','0',11,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(20,'3','id',0,'id','id','bigint','1','0','0','0','1',1,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(21,'3','name',100,'name','名称','varchar','0','1','1','1','1',2,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(22,'3','province',20,'province','省code','varchar','0','1','1','1','0',3,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(23,'3','city',20,'city','城市code','varchar','0','1','1','1','0',4,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(24,'3','district',20,'district','区域code','varchar','0','1','1','1','0',5,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(25,'3','detail_address',255,'detailAddress','详细地址','varchar','0','1','1','1','0',6,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(26,'3','longitude',0,'longitude','经度','decimal','0','1','1','1','0',7,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(27,'3','latitude',0,'latitude','纬度','decimal','0','1','1','1','0',8,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(28,'3','del_flag',1,'delFlag','是否删除(1删除)','char','0','0','0','0','0',9,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(29,'3','create_time',0,'createTime','创建时间','timestamp','0','0','0','0','1',10,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(30,'3','create_by',64,'createBy','创建人','varchar','0','0','0','0','0',11,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(31,'3','update_time',0,'updateTime','更新时间','timestamp','0','0','0','0','1',12,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57'),(32,'3','update_by',64,'updateBy','更新人','varchar','0','0','0','0','0',13,'anonymity','anonymity','2024-08-22 15:46:57','2024-08-22 15:46:57');
